params {
    // Input/Output
    input = null                          // Input FASTA with siRNA candidates  
    outdir = 'results'                   // Output directory
    
    // Analysis parameters
    genome_species = 'human,rat,rhesus'  // Comma-separated species list
    sirna_length = 21                    // Expected siRNA length
    max_hits = 10000                     // Maximum hits per candidate
    
    // BWA parameters (optimized for short sequences)
    bwa_k = 12                           // BWA seed length
    bwa_T = 15                           // BWA minimum score threshold
    
    // Seed region parameters
    seed_start = 2                       // Seed region start position (1-based)
    seed_end = 8                         // Seed region end position (1-based)
    
    // Genome indices - customize these paths for your system
    genome_indices = [
        'human': '/data/genomes/human/bwa_index/GRCh38',
        'rat': '/data/genomes/rat/bwa_index/Rnor6',
        'rhesus': '/data/genomes/rhesus/bwa_index/Mmul10',
        'mouse': '/data/genomes/mouse/bwa_index/GRCm39'
    ]
}

// Process configuration
process {
    // Default resource allocation
    cpus = 4
    memory = '8 GB'
    time = '2h'
    
    // Error strategy
    errorStrategy = { task.exitStatus in [130,143,137,104,134,139] ? 'retry' : 'finish' }
    maxRetries = 2
    
    // Process-specific configurations
    withName:VALIDATE_INPUT {
        cpus = 1
        memory = '2 GB'
        time = '30m'
    }
    
    withName:RUN_OFFTARGET_ANALYSIS {
        cpus = 8
        memory = '16 GB'
        time = '4h'
        // This is the most resource-intensive step
    }
    
    withName:AGGREGATE_RESULTS {
        cpus = 2
        memory = '4 GB'
        time = '1h'
    }
}

// Executor configuration
executor {
    name = 'local'
    cpus = 16
    memory = '32 GB'
}

// Docker configuration
docker {
    enabled = true
    runOptions = '-u $(id -u):$(id -g)'
}

// Conda configuration (alternative to Docker)
conda {
    enabled = false
    cacheDir = "$HOME/.nextflow-conda-cache"
}

// Singularity configuration (alternative to Docker)
singularity {
    enabled = false
    autoMounts = true
    cacheDir = "$HOME/.nextflow-singularity-cache"
}

// Report configuration
report {
    enabled = true
    file = "${params.outdir}/execution_report.html"
    overwrite = true
}

timeline {
    enabled = true
    file = "${params.outdir}/execution_timeline.html"
    overwrite = true
}

trace {
    enabled = true
    file = "${params.outdir}/execution_trace.txt"
    overwrite = true
}

dag {
    enabled = true
    file = "${params.outdir}/pipeline_dag.svg"
    overwrite = true
}

// Workflow metadata
manifest {
    name = 'sirna-offtarget-analysis'
    author = 'siRNA Design Toolkit'
    homePage = 'https://github.com/your-org/sirna-design'
    description = 'Comprehensive off-target analysis pipeline for siRNA candidates'
    mainScript = 'main.nf'
    nextflowVersion = '>=25.04.0'
    version = '1.0.0'
}

// Profiles for different execution environments
profiles {
    local {
        process.executor = 'local'
        process.cpus = 4
        process.memory = '8 GB'
    }
    
    cluster {
        process.executor = 'slurm'
        process.queue = 'normal'
        process.clusterOptions = '--account=your_account'
    }
    
    cloud {
        process.executor = 'awsbatch'
        aws.region = 'us-east-1'
        aws.batch.cliPath = '/home/ec2-user/miniconda/bin/aws'
    }
    
    test {
        params.genome_species = 'human'
        params.max_hits = 100
        process.cpus = 1
        process.memory = '2 GB'
    }

    docker {
        // Enable Docker execution and provide sensible defaults
        process.executor = 'local'
        docker.enabled = true
        // Set a default container for index building (can be overridden per-process or per-genome)
        params.container = 'renatopuga/bwa-mem2:latest'
        // Make sure processes run with the invoking user UID inside container
        docker.runOptions = "-u \$(id -u):\$(id -g)"
        // Use modest resources by default for local docker testing
        process.cpus = 4
        process.memory = '8 GB'
    }
}
