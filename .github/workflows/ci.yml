name: 🧬 siRNA Design Toolkit CI/CD

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master ]
  release:
    types: [ published ]

env:
  PYTHON_VERSION: "3.11"
permissions:
  contents: read

jobs:
  lint:
    name: 🔎 Lint & Typecheck
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: ⚡ Install uv CLI
      uses: astral-sh/setup-uv@v6
      with:
        activate-environment: false
        python-version: '3.11'
        enable-cache: true
        cache-suffix: lint

    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-3.11-${{ hashFiles('**/pyproject.toml','**/uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-3.11-
          ${{ runner.os }}-pip-

    - name: 📦 Install dependencies
      run: uv pip install --system -e .[dev]

    - name: 🔍 Lint with ruff
      run: ruff check src tests

    - name: 🎨 Check formatting with black
      run: black --check src tests

    - name: 🔬 Type check with mypy
      run: mypy src

  test:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: ⚡ Install uv CLI
      uses: astral-sh/setup-uv@v6
      with:
        activate-environment: false
        python-version: ${{ matrix.python-version }}
        enable-cache: true
        cache-suffix: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml','**/uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-

    - name: 📦 Install dependencies
      run: uv pip install --system -e .[dev]

    - name: 🧪 Run tests with pytest
      run: pytest --cov=sirnaforge --cov-report=xml

    - name: 📊 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.11'

  build:
    name: 📦 Build Package
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: ⚡ Install uv CLI
      uses: astral-sh/setup-uv@v6
      with:
        activate-environment: false

    - name: 🧰 Install build deps
      run: uv pip install --system -e .[dev]

    - name: 🏗️ Build package
      run: python -m build

    - name: 🧪 Test package installation
      run: |
        python -m pip install dist/*.whl
        sirna --version

    - name: 📤 Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: python-package
        path: dist/

  # publish job moved to .github/workflows/publish.yml to isolate secret usage

  deploy-docs:
    name: 📚 Deploy Documentation
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: ⚡ Install uv CLI
      uses: astral-sh/setup-uv@v6
      with:
        activate-environment: false

    - name: 📦 Install dependencies
      run: uv pip install --system -e .[dev]

    - name: 🏗️ Build documentation
      run: sphinx-build docs docs/_build/html

    - name: 🚀 Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/_build/html
